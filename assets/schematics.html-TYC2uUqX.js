import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as d,c as h,b as t,e as a,w as i,d as e,f as s}from"./app-rtQi05JD.js";const c="/Minecolonies-Chinese-Wiki/assets/image/tutorial/testbuilding.png",u="/Minecolonies-Chinese-Wiki/assets/image/tutorial/scan1.png",p="/Minecolonies-Chinese-Wiki/assets/image/tutorial/scan2.png",m="/Minecolonies-Chinese-Wiki/assets/image/tutorial/scan3.png",f="/Minecolonies-Chinese-Wiki/assets/image/tutorial/schematic.png",y="/Minecolonies-Chinese-Wiki/assets/image/buildings/plantation/planter_kelp_explanation.png",g="/Minecolonies-Chinese-Wiki/assets/image/buildings/plantation/planter_seagrass_explanation.png",b="/Minecolonies-Chinese-Wiki/assets/image/buildings/plantation/planter_seapickles_explanation.png",w="/Minecolonies-Chinese-Wiki/assets/image/tutorial/upgradabledecos.png",v={},k=t("h1",{id:"schematics",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#schematics","aria-hidden":"true"},"#"),e(" Schematics")],-1),x=t("p",null,[e("Schematics are files containing block and entity information of a certain area a player scanned with the "),t("a",{href:"../items/scantool"},"Scan Tool"),e(" in-game. You can use the scan tool and scan ANY building or structure you like in singleplayer or multiplayer and then have your {% worker_link builder %} build it for you (provided that you give them all the materials needed, of course).")],-1),q={class:"table-of-contents"},_=s('<h2 id="scanning-a-new-structure" tabindex="-1"><a class="header-anchor" href="#scanning-a-new-structure" aria-hidden="true">#</a> Scanning a New Structure</h2><p>Once you have a structure or area you want to scan to have your Builder build, you need to determine the exact area that needs to be scanned.</p><p><img src="'+c+'" alt="TestBuilding"></p><p>Take your <a href="../items/scantool">Scan Tool</a> and left-click the lowest left block of the area and then place a block (it can be a <a href="../../source/items/placeholderblocks">placeholder block</a> in the top right corner and right-click on it.</p><p><img src="'+u+'" alt="ScanPoint1"></p><p><img src="'+p+'" alt="ScanPoint2"></p><p>Then click in the air to see the entire structure.</p><p><img src="'+m+'" alt="ScanFull"></p><p>Once you have the full area set, you can press Escape and the white outline of the scan area will stay in place. Go around it to double-check that everything you want is in the scan area. If the area contains multiple eligible anchor blocks (hut blocks, tag anchors or decoration controllers), you need to shift+left click the correct anchor block (e.g. the barracks hut block in a barracks schematic). When you are ready, you can right-click in the air again to get the GUI to display where you can enter your scan name. Then press the green checkmark to save the scan.</p><p>SPECIAL NOTE: Do not rename the file after scanning. It MUST be scanned with the correct name.</p><p>{% version &quot;1.18.2&quot; before=true %}<br> Scans are saved in <code>../minecolonies/scan/new/...</code>.<br><br><br> Once the scans are saved, they need to be moved to the <code>../structurize/schematics/(folder)/file</code> if they are a <a href="#customhuts">custom hut</a>.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}<br> Scans are saved in <code>*/blueprints/&lt;yourplayername&gt;/scans</code>.<br><br><br> Once the scans are saved, they need to be placed in a style pack, preferably in the correct folder. See the <a href="#style-packs">style packs</a> chapter for more details.<br> {% endversion %}</p><h2 id="placing-a-schematic" tabindex="-1"><a class="header-anchor" href="#placing-a-schematic" aria-hidden="true">#</a> Placing a Schematic.</h2><p>{% version &quot;1.18.2&quot; before=true %}<br> Once you have scanned a structure, you can use the <a href="../../source/items/buildtool">build tool</a> to have your {% worker_link farmer %} build it for you. Once you right-click with the build tool, you will have to select &quot;My Schematics&quot; (in the left dropdown menu) and on the right dropdown menu you will see the scans that you have made. There is also a Rename button where you can change the name of the scan. You can also delete any of your saved scans.<br> {% endversion %}</p><p><img src="'+f+'" alt="Schematic"></p><p>{% version &quot;1.19&quot; after=true %}<br> The scanned structure can be found in the <a href="../../source/items/buildtool">build tool</a> under the style pack with your own name. Click &quot;Switch Pack&quot; -&gt; &quot;&lt;yourplayername&gt;&quot; (icon looks like the scan tool) -&gt; &quot;scans&quot;.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}</p><h2 id="style-packs" tabindex="-1"><a class="header-anchor" href="#style-packs" aria-hidden="true">#</a> Style packs</h2><p>Styles are now structured in so-called style packs. This is similar to a resource pack or data pack, in that it has a file with some metadata about the style (the name, a description, optionally a link to an image, etc.), and a folder structure with the actual files.</p><p>Stylepacks live in the blueprints folder, within your Minecraft folder. This folder already contains one style pack: One with your player&#39;s name. This style pack will contain your scanned files, and can be used to test schematics. In order to make a new style, you need to make a new schematic pack.</p><h3 id="the-pack-json" tabindex="-1"><a class="header-anchor" href="#the-pack-json" aria-hidden="true">#</a> The pack.json</h3><p>This json file contains metadata describing the style:</p><table><thead><tr><th>Key Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>&quot;version&quot;</code></td><td>number</td><td>Pack version, start at 1, increase it whenever you make a new version of the pack</td></tr><tr><td><code>&quot;pack-format&quot;</code></td><td>number</td><td>Descriptor for the pack format, needs to be 1 at the moment</td></tr><tr><td><code>&quot;desc&quot;</code></td><td>string</td><td>Description of the style. This will be visible in the build tool to explain what your style is about</td></tr><tr><td><code>&quot;authors&quot;</code></td><td>array of strings</td><td>Names of the authors, in order to credit them. This is visible in the build tool</td></tr><tr><td><code>&quot;mods&quot;</code></td><td>array of strings</td><td>Names of used mods (ids). The style is not visible if one of those mods is not installed, to prevent broken schematics</td></tr><tr><td><code>&quot;name&quot;</code></td><td>string</td><td>The name of the style pack</td></tr><tr><td><code>&quot;icon&quot;</code></td><td>string</td><td>The name of the file with an icon which is showed in the style packs selection screen</td></tr></tbody></table><p>You have to increase the version number whenever you release your pack for others to use, or whenever you install a new version onto a server. You don&#39;t need to increase it when testing changes purely in single-player.</p><h3 id="the-folder-structure" tabindex="-1"><a class="header-anchor" href="#the-folder-structure" aria-hidden="true">#</a> The folder structure</h3><p>There are several folders, separating the buildings and decorations in categories.<br> Each of the folders at the highest level can have a couple of icons, named <code>icon.png</code> and <code>icon_disabled.png</code>. Those are shown in the button bar right above the hot bar.</p>',26),T={href:"https://github.com/ldtteam/minecolonies/tree/version/1.19/src/main/resources/blueprints/minecolonies",target:"_blank",rel:"noopener noreferrer"},S=t("br",null,null,-1),H=t("br",null,null,-1),N={href:"https://airtable.com/shruNNUKhTNk0saz5",target:"_blank",rel:"noopener noreferrer"},C=s('<p>With a few specific exceptions, you don&#39;t <em>have</em> to strictly follow the standard folder structure -- but it&#39;s recommended to stick to it when possible to make it easier for others to find specific buildings and decorations. But you&#39;re free to make extra folders to help group separate but related sets together, especially if you don&#39;t want them to appear directly as alternate buildings. E.g. if you have two styles of roads, one for early game and one for later game, you could put them in infrastructure/roads/simple/ and infrastructure/roads/nice/.</p><p><strong>Note:</strong> It&#39;s strongly recommended to have each folder only contain files or subfolders, but not both. While it is possible to mix them, the build tool doesn&#39;t display it as nicely.<br> {% endversion %}</p><h2 id="faq" tabindex="-1"><a class="header-anchor" href="#faq" aria-hidden="true">#</a> FAQ</h2><p>This is a FAQ section to answer common questions regarding schematics in MineColonies.</p><h4 id="how-do-i-install-custom-schematics-i-just-downloaded" tabindex="-1"><a class="header-anchor" href="#how-do-i-install-custom-schematics-i-just-downloaded" aria-hidden="true">#</a> How do I install custom schematics I just downloaded?</h4><p>{% version &quot;1.18.2&quot; before=true %}<br> Those custom schematics go in <code>*/structurize/schematics</code>. Unzip the zip you downloaded, and put all subfolders in the schematics folder. That folder should contain folders like &lt;stylename&gt;, decorations, walls, supplycamps etc. (depending on which style you installed)<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}<br> The style pack goes in the &quot;blueprints&quot; folder. Unzip the zip, and find the folder containing the pack.json (either the unzipped folder, or a folder directly in it, depending on how the zip was made). This folder needs to be placed in <code>*/blueprints</code> directly, not any subfolder thereof.<br> {% endversion %}</p><h4 id="what-and-where-is-the-scans-folder" tabindex="-1"><a class="header-anchor" href="#what-and-where-is-the-scans-folder" aria-hidden="true">#</a> What and where is the scans folder?</h4><p>The scans folder is where the schematics are saved after performing a scan using the scan tool in MineColonies.<br> {% version &quot;1.18.2&quot; before=true %}<br> This is a client-side-only directory which is located in Minecraft&#39;s folder under: <code>*/structurize/scans/</code>. Freshly scanned schematics can be found in <code>*/structurize/scans/new/</code> unless they have been renamed in-game. (If they aren&#39;t there, look in <code>*/minecolonies/scans/new</code>.) This directory is shared between all your singleplayer games and multiplayer games.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}<br> This is located in your own style pack in Minecraft&#39;s folder under: <code>*/blueprints/&lt;yourplayername&gt;/scans/</code>. This folder is shared between all your singleylayer and multiplayer games.<br> {% endversion %}</p><h4 id="where-is-the-schematic-folder" tabindex="-1"><a class="header-anchor" href="#where-is-the-schematic-folder" aria-hidden="true">#</a> Where is the schematic folder?</h4><p>{% version &quot;1.18.2&quot; before=true %}<br> Custom schematics need to be copied inside the schematic folder. For both singleplayer and multiplayer games, the folder is under <code>*/structurize/schematics/</code>.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}<br> Custom schematics need to be placed in a (custom) <a href="#style-packs">style pack</a>. For more information about that, look there.<br> {% endversion %}</p><h4 id="i-have-a-minecolonies-01e6a291-8a01-4763-bcae-f3a8797b1d52-cache-folder-what-is-that-for" tabindex="-1"><a class="header-anchor" href="#i-have-a-minecolonies-01e6a291-8a01-4763-bcae-f3a8797b1d52-cache-folder-what-is-that-for" aria-hidden="true">#</a> I have a &quot;*/minecolonies/01e6a291-8a01-4763-bcae-f3a8797b1d52/cache/&quot; folder, what is that for?</h4><p>{% version &quot;1.18.2&quot; before=true %}<br> When playing on a server, the server needs to send the schematics to the players so that the build tool&#39;s preview works. Those schematics are saved in Minecraft&#39;s directory under <code>*/structurize/{ServerUUID}/cache/</code>, where ServerUUID is the unique identifier of the server. Those directories can be safely removed as they are automatically created by the server when needed.<br> {% endversion %}</p><p>{% version &quot;1.19.2&quot; after=true %}<br> This was previously used to save schematics from a server and was automatically created as needed. However, this is no longer needed in 1.19.2 and later, so this folder can be removed safely.<br> {% endversion %}</p><p>{% version &quot;1.19.2&quot; after=true %}</p><h4 id="i-have-a-blueprints-clients-folder-what-is-that-for" tabindex="-1"><a class="header-anchor" href="#i-have-a-blueprints-clients-folder-what-is-that-for" aria-hidden="true">#</a> I have a &quot;<em>/blueprints/clients/</em>&quot; folder, what is that for?</h4><p>On a server, this folder holds a cached copy of the decorations and shapes used by your players -- possibly even including entire style packs that they&#39;ve installed themselves (though note that for game balance purposes they won&#39;t be able to make functional buildings this way; these must be installed &quot;properly&quot; on the server to be usable).</p><p>You can delete these folders at any time (though preferably when the player is not logged in); they will be re-created as needed.<br> {% endversion %}</p><h4 id="can-i-just-build-my-own-buildings-and-then-get-the-colonists-to-move-in" tabindex="-1"><a class="header-anchor" href="#can-i-just-build-my-own-buildings-and-then-get-the-colonists-to-move-in" aria-hidden="true">#</a> Can I just build my own buildings and then get the colonists to &quot;move in&quot;?</h4><p>No. Functional buildings must be constructed by the Builder. You have to either use one of the prefabs provided by existing style packs (either included in the mod or via various addons installed separately), or design your own custom huts as an explicitly separate step (typically in a special creative designing world), before getting the builder to place them in your real colony. MineColonies is more like an RTS than it is like classic Minecraft building.</p><h4 id="how-to-create-custom-huts" tabindex="-1"><a class="header-anchor" href="#how-to-create-custom-huts" aria-hidden="true">#</a> How to create <a id="customhuts">custom huts</a>?</h4><p>To create new schematics, there are some guidelines that you must follow: the scans MUST have the same footprint for each level of the hut; the scans must contain the hut&#39;s block, for example the Builder&#39;s Hut block for the {% building_link builder %}; the hut block need to be exactly at the same place and have the same rotation for each level.</p><p>Ensure you are building your custom hut outside of any colony borders. When placing the hut block inside the custom hut, shift+right click to place it without activating it. Then you can scan and save the schematic.</p><p>{% version &quot;1.18.2&quot; before=true %}<br> The scans&#39; filenames need to follow the naming convention: {StyleName}/{HutName}{HutLevel}.blueprint. For example, for the Builder&#39;s Huts with the MyOwn style, we would have:</p><p><em>myown/builder1.blueprint</em><br><em>myown/builder2.blueprint</em><br><em>myown/builder3.blueprint</em><br><em>myown/builder4.blueprint</em><br><em>myown/builder5.blueprint</em></p><ul><li><strong>Note:</strong> In the <a href="../../source/items/buildtool">build tool</a>, the extension is hidden. HutName can be any of the listed huts below. The maximum level is 5 (except for the Tavern; its max level is 3).</li></ul><p>Alternative designs can be placed under a style name like &quot;myownalternative&quot;, or a subfolder like <code>myown/alt/*</code>.<br> {% endversion %}</p><p>Once ready, move the <code>myown</code> folder into the blueprints folder and start your game. You should be able to see it with the the build tool.</p><p><strong>Note:</strong> Remember that you need the appropriate hut in your inventory to be able to see the schematics in the build tool.</p><p>{% version &quot;1.19&quot; after=true %}<br> The naming for the buildings is not strict anymore. The only things that are important are that they are named consistently, that their names end with the hut level, and that you only use lowercase letters in the hut names (avoid capitals, spaces, or other punctuation).<br> Alternate designs can just have a different name than the primary one. E.g. if you named the level 1 builder&#39;s hut &quot;builder1&quot;, an alternative version could be called &quot;altbuilder1&quot; or &quot;builderalt1&quot; or even something completely different (&quot;constructionworker1&quot;).<br> Don&#39;t use numbers anywhere in the name except right at the end for the level. E.g. &quot;alt1builder1&quot; won&#39;t work as expected.</p><p>Once ready, you need to make a <a href="#style-packs">style pack</a> out of them.<br> The schematics are visible in the build tool without the hut block, but you can&#39;t view them in survival mode (their button is greyed out, with an error message that you need to have the hut block).<br> {% endversion %}</p><h2 id="_1-18-custom-hut-filenames" tabindex="-1"><a class="header-anchor" href="#_1-18-custom-hut-filenames" aria-hidden="true">#</a> [1.18] Custom Hut Filenames</h2><p>Here is a full list, up-to-date as of 14 October 2022, of the building names. Please note <em>do not use capital letters in hut names</em>.</p><table><thead><tr><th style="text-align:left;">Level 1</th><th style="text-align:left;">Level 2</th><th style="text-align:left;">Level 3</th><th style="text-align:left;">Level 4</th><th style="text-align:left;">Level 5</th></tr></thead><tbody><tr><td style="text-align:left;">archery1</td><td style="text-align:left;">archery2</td><td style="text-align:left;">archery3</td><td style="text-align:left;">archery4</td><td style="text-align:left;">archery5</td></tr><tr><td style="text-align:left;">alchemist1</td><td style="text-align:left;">alchemist2</td><td style="text-align:left;">alchemist3</td><td style="text-align:left;">alchemist4</td><td style="text-align:left;">alchemist5</td></tr><tr><td style="text-align:left;">baker1</td><td style="text-align:left;">baker2</td><td style="text-align:left;">baker3</td><td style="text-align:left;">baker4</td><td style="text-align:left;">baker5</td></tr><tr><td style="text-align:left;">barracks1</td><td style="text-align:left;">barracks2</td><td style="text-align:left;">barracks3</td><td style="text-align:left;">barracks4</td><td style="text-align:left;">barracks5</td></tr><tr><td style="text-align:left;">barrackstower1</td><td style="text-align:left;">barrackstower2</td><td style="text-align:left;">barrackstower3</td><td style="text-align:left;">barrackstower4</td><td style="text-align:left;">barrackstower5</td></tr><tr><td style="text-align:left;">beekeeper1</td><td style="text-align:left;">beekeeper2</td><td style="text-align:left;">beekeeper3</td><td style="text-align:left;">beekeeper4</td><td style="text-align:left;">beekeeper5</td></tr><tr><td style="text-align:left;">blacksmith1</td><td style="text-align:left;">blacksmith2</td><td style="text-align:left;">blacksmith3</td><td style="text-align:left;">blacksmith4</td><td style="text-align:left;">blacksmith5</td></tr><tr><td style="text-align:left;">builder1</td><td style="text-align:left;">builder2</td><td style="text-align:left;">builder3</td><td style="text-align:left;">builder4</td><td style="text-align:left;">builder5</td></tr><tr><td style="text-align:left;">chickenherder1</td><td style="text-align:left;">chickenherder2</td><td style="text-align:left;">chickenherder3</td><td style="text-align:left;">chickenherder4</td><td style="text-align:left;">chickenherder5</td></tr><tr><td style="text-align:left;">citizen1</td><td style="text-align:left;">citizen2</td><td style="text-align:left;">citizen3</td><td style="text-align:left;">citizen4</td><td style="text-align:left;">citizen5</td></tr><tr><td style="text-align:left;">combatacademy1</td><td style="text-align:left;">combatacademy2</td><td style="text-align:left;">combatacademy3</td><td style="text-align:left;">combatacademy4</td><td style="text-align:left;">combatacademy5</td></tr><tr><td style="text-align:left;">composter1</td><td style="text-align:left;">composter2</td><td style="text-align:left;">composter3</td><td style="text-align:left;">composter4</td><td style="text-align:left;">composter5</td></tr><tr><td style="text-align:left;">concretemixer1</td><td style="text-align:left;">concretemixer2</td><td style="text-align:left;">concretemixer3</td><td style="text-align:left;">concretemixer4</td><td style="text-align:left;">concretemixer5</td></tr><tr><td style="text-align:left;">cook1</td><td style="text-align:left;">cook2</td><td style="text-align:left;">cook3</td><td style="text-align:left;">cook4</td><td style="text-align:left;">cook5</td></tr><tr><td style="text-align:left;">cowboy1</td><td style="text-align:left;">cowboy2</td><td style="text-align:left;">cowboy3</td><td style="text-align:left;">cowboy4</td><td style="text-align:left;">cowboy5</td></tr><tr><td style="text-align:left;">crusher1</td><td style="text-align:left;">crusher2</td><td style="text-align:left;">crusher3</td><td style="text-align:left;">crusher4</td><td style="text-align:left;">crusher5</td></tr><tr><td style="text-align:left;">deliveryman1</td><td style="text-align:left;">deliveryman2</td><td style="text-align:left;">deliveryman3</td><td style="text-align:left;">deliveryman4</td><td style="text-align:left;">deliveryman5</td></tr><tr><td style="text-align:left;">dyer1</td><td style="text-align:left;">dyer2</td><td style="text-align:left;">dyer3</td><td style="text-align:left;">dyer4</td><td style="text-align:left;">dyer5</td></tr><tr><td style="text-align:left;">enchanter1</td><td style="text-align:left;">enchanter2</td><td style="text-align:left;">enchanter3</td><td style="text-align:left;">enchanter4</td><td style="text-align:left;">enchanter5</td></tr><tr><td style="text-align:left;">farmer1</td><td style="text-align:left;">farmer2</td><td style="text-align:left;">farmer3</td><td style="text-align:left;">farmer4</td><td style="text-align:left;">farmer5</td></tr><tr><td style="text-align:left;">fisherman1</td><td style="text-align:left;">fisherman2</td><td style="text-align:left;">fisherman3</td><td style="text-align:left;">fisherman4</td><td style="text-align:left;">fisherman5</td></tr><tr><td style="text-align:left;">fletcher1</td><td style="text-align:left;">fletcher2</td><td style="text-align:left;">fletcher3</td><td style="text-align:left;">fletcher4</td><td style="text-align:left;">fletcher5</td></tr><tr><td style="text-align:left;">florist1</td><td style="text-align:left;">florist2</td><td style="text-align:left;">florist3</td><td style="text-align:left;">florist4</td><td style="text-align:left;">florist5</td></tr><tr><td style="text-align:left;">glassblower1</td><td style="text-align:left;">glassblower2</td><td style="text-align:left;">glassblower3</td><td style="text-align:left;">glassblower4</td><td style="text-align:left;">glassblower5</td></tr><tr><td style="text-align:left;">graveyard1</td><td style="text-align:left;">graveyard2</td><td style="text-align:left;">graveyard3</td><td style="text-align:left;">graveyard4</td><td style="text-align:left;">graveyard5</td></tr><tr><td style="text-align:left;">guardtower1</td><td style="text-align:left;">guardtower2</td><td style="text-align:left;">guardtower3</td><td style="text-align:left;">guardtower4</td><td style="text-align:left;">guardtower5</td></tr><tr><td style="text-align:left;">hospital1</td><td style="text-align:left;">hospital2</td><td style="text-align:left;">hospital3</td><td style="text-align:left;">hospital4</td><td style="text-align:left;">hospital5</td></tr><tr><td style="text-align:left;">library1</td><td style="text-align:left;">library2</td><td style="text-align:left;">library3</td><td style="text-align:left;">library4</td><td style="text-align:left;">library5</td></tr><tr><td style="text-align:left;">lumberjack1</td><td style="text-align:left;">lumberjack2</td><td style="text-align:left;">lumberjack3</td><td style="text-align:left;">lumberjack4</td><td style="text-align:left;">lumberjack5</td></tr><tr><td style="text-align:left;">mechanic1</td><td style="text-align:left;">mechanic2</td><td style="text-align:left;">mechanic3</td><td style="text-align:left;">mechanic4</td><td style="text-align:left;">mechanic5</td></tr><tr><td style="text-align:left;">miner1</td><td style="text-align:left;">miner2</td><td style="text-align:left;">miner3</td><td style="text-align:left;">miner4</td><td style="text-align:left;">miner5</td></tr><tr><td style="text-align:left;">mysticalsite1</td><td style="text-align:left;">mysticalsite2</td><td style="text-align:left;">mysticalsite3</td><td style="text-align:left;">mysticalsite4</td><td style="text-align:left;">mysticalsite5</td></tr><tr><td style="text-align:left;">netherworker1</td><td style="text-align:left;">netherworker2</td><td style="text-align:left;">netherworker3</td><td style="text-align:left;">netherworker4</td><td style="text-align:left;">netherworker5</td></tr><tr><td style="text-align:left;">plantation1</td><td style="text-align:left;">plantation2</td><td style="text-align:left;">plantation3</td><td style="text-align:left;">plantation4</td><td style="text-align:left;">plantation5</td></tr><tr><td style="text-align:left;">rabbithutch1</td><td style="text-align:left;">rabbithutch2</td><td style="text-align:left;">rabbithutch3</td><td style="text-align:left;">rabbithutch4</td><td style="text-align:left;">rabbithutch5</td></tr><tr><td style="text-align:left;">sawmill1</td><td style="text-align:left;">sawmill2</td><td style="text-align:left;">sawmill3</td><td style="text-align:left;">sawmill4</td><td style="text-align:left;">sawmill5</td></tr><tr><td style="text-align:left;">school1</td><td style="text-align:left;">school2</td><td style="text-align:left;">school3</td><td style="text-align:left;">school4</td><td style="text-align:left;">school5</td></tr><tr><td style="text-align:left;">shepherd1</td><td style="text-align:left;">shepherd2</td><td style="text-align:left;">shepherd3</td><td style="text-align:left;">shepherd4</td><td style="text-align:left;">shepherd5</td></tr><tr><td style="text-align:left;">sifter1</td><td style="text-align:left;">sifter2</td><td style="text-align:left;">sifter3</td><td style="text-align:left;">sifter4</td><td style="text-align:left;">sifter5</td></tr><tr><td style="text-align:left;">smeltery1</td><td style="text-align:left;">smeltery2</td><td style="text-align:left;">smeltery3</td><td style="text-align:left;">smeltery4</td><td style="text-align:left;">smeltery5</td></tr><tr><td style="text-align:left;">stonemason1</td><td style="text-align:left;">stonemason2</td><td style="text-align:left;">stonemason3</td><td style="text-align:left;">stonemason4</td><td style="text-align:left;">stonemason5</td></tr><tr><td style="text-align:left;">stonesmeltery1</td><td style="text-align:left;">stonesmeltery2</td><td style="text-align:left;">stonesmeltery3</td><td style="text-align:left;">stonesmeltery4</td><td style="text-align:left;">stonesmeltery5</td></tr><tr><td style="text-align:left;">swineherder1</td><td style="text-align:left;">swineherder2</td><td style="text-align:left;">swineherder3</td><td style="text-align:left;">swineherder4</td><td style="text-align:left;">swineherder5</td></tr><tr><td style="text-align:left;">tavern1</td><td style="text-align:left;">tavern2</td><td style="text-align:left;">tavern3</td><td style="text-align:left;">N/A</td><td style="text-align:left;">N/A</td></tr><tr><td style="text-align:left;">townhall1</td><td style="text-align:left;">townhall2</td><td style="text-align:left;">townhall3</td><td style="text-align:left;">townhall4</td><td style="text-align:left;">townhall5</td></tr><tr><td style="text-align:left;">university1</td><td style="text-align:left;">university2</td><td style="text-align:left;">university3</td><td style="text-align:left;">university4</td><td style="text-align:left;">university5</td></tr><tr><td style="text-align:left;">warehouse1</td><td style="text-align:left;">warehouse2</td><td style="text-align:left;">warehouse3</td><td style="text-align:left;">warehouse4</td><td style="text-align:left;">warehouse5</td></tr></tbody></table><h2 id="custom-supply-ships-and-camps" tabindex="-1"><a class="header-anchor" href="#custom-supply-ships-and-camps" aria-hidden="true">#</a> Custom Supply Ships and Camps</h2><p>The process for custom <a href="../../source/items/supplycampandship">supply ships and camps</a> is slightly different:</p><p>{% version &quot;1.18.2&quot; before=true %}</p><table><thead><tr><th>Camp or Ship</th><th>File Name and Path</th></tr></thead><tbody><tr><td>Camp</td><td>structurize/schematics/supplycamp/myownsupplycamp</td></tr><tr><td>Ship</td><td>structurize/schematics/supplyship/myownsupplyship</td></tr></tbody></table><p>So, for example, the path would be <code>structurize/schematics/wildwest/builder1</code> for the Builder&#39;s Hut level 1 and <code>structurize/schematics/supplycamp/wildwestsupplycamp</code> for the supply camp.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}</p><table><thead><tr><th>Camp or Ship</th><th>File Name and Path</th></tr></thead><tbody><tr><td>Camp</td><td>blueprints/&lt;myownstyle&gt;/decorations/supplies/supplycamp</td></tr><tr><td>Ship</td><td>blueprints/&lt;myownstyle&gt;/decorations/supplies/supplyship</td></tr><tr><td>Nether Ship</td><td>blueprints/&lt;myownstyle&gt;/decorations/supplies/nethership</td></tr></tbody></table><p>So, for example, the path would be <code>blueprints/wildwest/fundamentals/builder1</code> for the Builder&#39;s Hut level 1 and <code>blueprints/wildwest/decorations/supplies/supplycamp</code> for the supply camp.<br> {% endversion %}</p><p>You should always apply a <a href="../../source/items/tagtool">groundlevel tag</a> when making a supply camp/ship. The rules for guessing where the ground level is without the tag change depending whether they&#39;re placed by the build tool or the supply item, for legacy reasons.</p><h2 id="hut-requirements" tabindex="-1"><a class="header-anchor" href="#hut-requirements" aria-hidden="true">#</a> Hut Requirements</h2><table><thead><tr><th>Building</th><th>Requirements</th><th>Suggested</th></tr></thead><tbody><tr><td>{% building_link archery %}</td><td>1 archery dummy (a hay bale with a button on it); 1 bed per level</td><td>at least 1 standing position per level (a glowstone block, or any block tagged with <code>work</code>)</td></tr><tr><td>{% building_link alchemist %}</td><td>1 brewing stand per level; 2 soul sand per level starting at level 2 (with 4 soul sand); leaves next to logs, i.e. &quot;trees&quot;</td><td></td></tr><tr><td>{% building_link bakery %}</td><td>1 furnace</td><td></td></tr><tr><td>{% building_link barracks %}</td><td>1 Barracks Tower per level (up to level 4)</td><td></td></tr><tr><td>{% building_link barrackstower %}</td><td></td><td>1 bed per level</td></tr><tr><td>{% building_link builder %}</td><td></td><td>1 rack per level</td></tr><tr><td>{% building_link combatacademy %}</td><td>1 combat dummy per level (a pumpkin on top of a bale of hay); 1 bed per level</td><td></td></tr><tr><td>{% building_link composter %}</td><td>1 <a href="../../source/items/compostbarrel">compost barrel</a> per level</td><td></td></tr><tr><td>{% building_link concretemixer %}</td><td>3 blocks of flowing water with solid blocks below and air blocks above</td><td></td></tr><tr><td>{% building_link dyer %}</td><td>1 furnace</td><td></td></tr><tr><td>{% building_link fisher %}</td><td>Hut block placed on a block at water level</td><td>At least 6x5x1 unobstructed body of water if integrating fishing location in the schematic</td></tr><tr><td>{% building_link flowershop %}</td><td>4 <a href="../../source/items/compost">compost blocks</a> per level</td><td></td></tr><tr><td>{% building_link glassblower %}</td><td>1 furnace per level</td><td></td></tr><tr><td>{% building_link graveyard %}</td><td>Named Graves, with the amount increasing per level</td><td>14 named graves at level 1, 18 named graves at level 2, 27 named graves at level 3, 36 named graves at level 4, 50 named graves at level 5</td></tr><tr><td>{% building_link guardtower %}</td><td></td><td>1 bed for aesthetics</td></tr><tr><td>{% building_link hospital %}</td><td>1 bed per level</td><td></td></tr><tr><td>{% building_link house %}</td><td>1 bed per level</td><td></td></tr><tr><td>{% building_link library %}</td><td>Bookshelves</td><td></td></tr><tr><td>{% building_link mine %}</td><td>A few starting ladders where the shaft&#39;s ladders will go with the tags [cobble] and [ladder]</td><td></td></tr><tr><td>{% building_link nethermine %}</td><td>A nether portal, and an enclosed 1x1x2 room</td><td></td></tr><tr><td>{% building_link plantation %}</td><td>12 per level, 4 for each of sugar cane, cactus and bamboo</td><td></td></tr><tr><td>{% building_link restaurant %}</td><td>1 furnace per level</td><td></td></tr><tr><td>{% building_link school %}</td><td>2 carpets per level</td><td>4 carpets per level</td></tr><tr><td>{% building_link smeltery %}</td><td>1 furnace per level</td><td></td></tr><tr><td>{% building_link stonesmeltery %}</td><td>1 furnace per level</td><td></td></tr><tr><td>{% building_link tavern %}</td><td>4 beds and a dining room</td><td><a href="../../source/items/barrel_horizontal">Horizontal barrels</a> and/or <a href="../../source/items/barrel_vertical">vertical barrels</a></td></tr><tr><td>{% building_link university %}</td><td>Bookshelves</td><td></td></tr><tr><td>{% building_link warehouse %}</td><td><a href="../../source/items/rack">Racks</a> (more each level)</td><td></td></tr></tbody></table><p><strong>Some buildings may also require tags to be set on certain blocks using the <a href="../../source/items/tagtool">tag tool</a>.</strong></p><h2 id="level-requirements-for-overworld-styles" tabindex="-1"><a class="header-anchor" href="#level-requirements-for-overworld-styles" aria-hidden="true">#</a> Level Requirements for Overworld Styles</h2><table><thead><tr><th>Level</th><th>Requirements</th></tr></thead><tbody><tr><td>Level 1</td><td>Very Easy - Wooden</td></tr><tr><td>Level 2</td><td>Easy - Iron</td></tr><tr><td>Level 3</td><td>Medium - Nether</td></tr><tr><td>Level 4</td><td>Difficult - Ocean</td></tr><tr><td>Level 5</td><td>Very Difficult - End</td></tr></tbody></table><h2 id="level-requirements-for-nether-styles" tabindex="-1"><a class="header-anchor" href="#level-requirements-for-nether-styles" aria-hidden="true">#</a> Level Requirements for Nether Styles</h2><table><thead><tr><th>Level</th><th>Requirements</th></tr></thead><tbody><tr><td>Level 1</td><td>Very Easy - Nether</td></tr><tr><td>Level 2</td><td>Easy - Rarer Nether</td></tr><tr><td>Level 3</td><td>Medium - Overworld</td></tr><tr><td>Level 4</td><td>Difficult - Ocean</td></tr><tr><td>Level 5</td><td>Very Difficult - End</td></tr></tbody></table><p>{% version &quot;1.19.2&quot; after=true %}</p><h2 id="plantation-fields" tabindex="-1"><a class="header-anchor" href="#plantation-fields" aria-hidden="true">#</a> Plantation Fields</h2><p>In 1.19.2 and beyond, the plantation has been changed to include fields, just like the {% worker_link farmer %}. However, unlike the {% worker_link farmer %}, these fields can be completely free-form and created by the style designers. Each field has certain requirements for the {% worker_link planter %} to do their work successfully.</p><p>Each plant has 2 separate tags: a field tag and a work tag.<br> The field tags are given to the plantation field block to define what plants this field handles. The work tag is given based on the implementation of the field.</p><p>A field can have as many field tags as you want, but not 2 of the same.</p><table><thead><tr><th>Plant</th><th>Field tag</th><th>Work tag</th><th>Maximum work tags</th></tr></thead><tbody><tr><td>Sugar cane</td><td>sugar_field</td><td>sugar</td><td>20</td></tr><tr><td>Cactus</td><td>cactus_field</td><td>cactus</td><td>20</td></tr><tr><td>Bamboo</td><td>bamboo_field</td><td>bamboo</td><td>20</td></tr><tr><td>Cocoa</td><td>cocoa_field</td><td>cocoa</td><td>5 (totalling 20 positions; details below)</td></tr><tr><td>Vine</td><td>vine_field</td><td>vine</td><td>20</td></tr><tr><td>Kelp</td><td>kelp_field</td><td>kelp</td><td>20</td></tr><tr><td>Seagrass</td><td>seagrass_field</td><td>seagrass</td><td>121 (11 x 11 area)</td></tr><tr><td>Sea Pickles</td><td>seapickle_field</td><td>seapickle</td><td>10</td></tr><tr><td>Glow Berries</td><td>glowb_field</td><td>glowb_vine</td><td>20</td></tr><tr><td>Weeping Vines</td><td>weepv_field</td><td>weepv_vine</td><td>20</td></tr><tr><td>Twisting Vines</td><td>twistv_field</td><td>twistv_vine</td><td>20</td></tr><tr><td>Crimson Plants</td><td>crimsonp_field</td><td>crimsonp_ground</td><td>121 (11 x 11 area)</td></tr><tr><td>Warped Plants</td><td>warpedp_field</td><td>warpedp_ground</td><td>121 (11 x 11 area)</td></tr></tbody></table><p>The {% worker_link planter %} will always attempt to walk to any adjacent air block around the planting position. If none of the adjacent positions are air, the planter will attempt to walk to the block itself. This prevents the {% worker_link planter %} from standing on the block itself whilst, for example, placing a block down like cactus, after which the {% worker_link planter %} would be standing inside of the plant.<br><em>Note</em>: Make sure that the {% worker_link planter %} can always get within about 4 blocks of the desired position. If not, they will teleport around to reach the position, which may not always work.</p><table><tbody><tr><td></td><td>X</td><td></td></tr><tr><td>X</td><td>P</td><td>X</td></tr><tr><td></td><td>X</td><td></td></tr></tbody></table><p>X = walking position</p><p>P = planting position</p><blockquote><p><em>Note</em>: Kelp is an exception to this behaviour. To prevent planters from diving into the water, the planter will walk to the first air block above the work tagged block and look up 26 blocks from the work tagged block. If this is not possible, they will not be able to harvest this plant, so ensure there is air above the water above the work tagged block.</p><p><img src="'+y+'" alt="Kelp field movement explanation"></p><ul><li>The red X is the position where the planter will walk to in the example image.</li><li>The blue X is the position where the work tag of the block is.</li></ul></blockquote><p>For downwards-growing plants, the planter will attempt to stand above the work tagged block and harvest below them. Make sure the planter can reach the top of the stem.</p><h3 id="vertically-growing-plants-upwards-and-downwards" tabindex="-1"><a class="header-anchor" href="#vertically-growing-plants-upwards-and-downwards" aria-hidden="true">#</a> Vertically Growing Plants (Upwards and Downwards)</h3><p>A &quot;vertically growing plant&quot; is a plant that grows in a single line, either upwards or downwards; for example, Sugar Cane is a vertically growing plant that grows upwards. These plants always break fully when their root blocks are broken. The planter will break these at the second block from the root.</p><p>Each of these plants have a minimum and sometimes a maximum growth height.<br> The planter can only harvest them when they reach the minimum. If plants have a maximum height, the planter will have an increasingly higher chance to harvest the plant the taller it gets. Plants are only required to grow to the minimum height within the bounds of the schematic.</p><table><thead><tr><th>Plant</th><th>Minimum height</th><th>Maximum height</th></tr></thead><tbody><tr><td>Sugar cane</td><td>3</td><td>N/A</td></tr><tr><td>Cactus</td><td>3</td><td>N/A</td></tr><tr><td>Bamboo</td><td>6</td><td>16</td></tr><tr><td>Kelp</td><td>2</td><td>25</td></tr><tr><td>Glowberries</td><td>3</td><td>N/A</td></tr><tr><td>Weeping vines</td><td>2</td><td>25</td></tr><tr><td>Twisting vines</td><td>2</td><td>25</td></tr></tbody></table><h3 id="treeside-plants" tabindex="-1"><a class="header-anchor" href="#treeside-plants" aria-hidden="true">#</a> Treeside Plants</h3><p>Treeside plants grow directly on the sides of trees. For these plants, you only need to tag the tree&#39;s stem; the working positions will automatically be set to every horizontally adjacent block of the tagged stem. Currently this is only used for Cocoa beans.</p><p>Note that this means that the amount of tags you can actually place is the amount of working positions divided by 4!</p><h3 id="bonemealed-fields" tabindex="-1"><a class="header-anchor" href="#bonemealed-fields" aria-hidden="true">#</a> Bonemealed Fields</h3><p>Bonemealed fields will tell the planter to use bonemeal somewhere on the ground to grow plants as if the player had used bonemeal.</p><p>The amount of planting positions on these fields are usually unlimited because bonemealing the ground has a set area of effect. However, it is suggested not to make the fields too big; an area around 7x7 is lightly suggested.</p><p>Every bonemealed plant works slightly differently.</p><table><thead><tr><th>Plant</th><th>Work tag location</th><th></th></tr></thead><tbody><tr><td>Seagrass</td><td>The block directly below the water should tagged; the planter will bonemeal the tagged block itself. Red Xs are where the planter will attempt to walk. Blue Xs are the blocks that are tagged with the work tag.</td><td><img src="'+g+'" alt="Seagrass explanation"></td></tr><tr><td>Sea pickles</td><td>The block directly below the water should tagged. The planter will initially place the pickles, then bonemeal the pickles to let them grow. Red Xs are where the planter will attempt to walk. Blue Xs are the blocks that are tagged with the work tag.</td><td><img src="'+b+'" alt="Sea Pickle explanation"></td></tr><tr><td>Crimson plants</td><td>Tag all the nylium ground blocks where the plants are supposed to grow.</td><td></td></tr><tr><td>Warped plants</td><td>Tag all the nylium ground blocks where the plants are supposed to grow.</td><td></td></tr></tbody></table><h3 id="percentage-based-harvesting" tabindex="-1"><a class="header-anchor" href="#percentage-based-harvesting" aria-hidden="true">#</a> Percentage-based Harvesting</h3><p>Percentage based harvesting fields will attempt to place a minimum percentage of plants down on given spots. These plants — such as vines — should then naturally spread to their surroundings without the player&#39;s help. The planter has no involvement in this process.</p><table><thead><tr><th>Plant</th><th>Tag location</th></tr></thead><tbody><tr><td>Vine</td><td>Tag all the positions where the vines themselves can spread to, NOT the blocks where the vines are attached to.</td></tr></tbody></table><p>{% endversion %}</p><h2 id="tips-on-building" tabindex="-1"><a class="header-anchor" href="#tips-on-building" aria-hidden="true">#</a> Tips on Building</h2><h3 id="do" tabindex="-1"><a class="header-anchor" href="#do" aria-hidden="true">#</a> Do</h3><ul><li>Make all levels of a hut have the same footprint for x, y, and z</li><li>Place the hut block in the same location with the same rotation</li><li>Make sure all <a href="../../source/items/rack">racks</a> and furnaces are in the same location through all levels (to prevent the contents spilling out when they&#39;re getting moved)</li><li>Use <a href="../../source/items/placeholderblocks">placeholders</a> where you want to keep any existing block (including from level to level), like the <a href="../../source/buildings/barrackstower">Barracks Towers</a> in the <a href="../../source/buildings/barracks">Barracks</a> schematic</li><li>Use <a href="../../source/items/placeholderblocks">solid placeholders</a> at or below ground level</li><li>Place a <a href="../../source/items/tagtool"><code>groundlevel</code> tag</a> at ground level if your hut isn&#39;t sitting directly on the ground.</li><li>Use only vanilla blocks or Structurize blocks (for official styles)</li><li>Use Books and Quills instead of blank books, or written books on a lectern. (Keep a copy of the original book and quill somewhere, if it turns out you made a mistake!)</li></ul><h3 id="don-t" tabindex="-1"><a class="header-anchor" href="#don-t" aria-hidden="true">#</a> Don&#39;t</h3><ul><li>Use unobtainable items in builds (no command blocks, petrified wood, infested blocks, or mob heads (including player heads))</li><li>Change someone else&#39;s style (officially) unless specifically asked to do so</li><li>Rename schematics after scanning</li></ul><h2 id="additional-information" tabindex="-1"><a class="header-anchor" href="#additional-information" aria-hidden="true">#</a> Additional Information</h2><h3 id="how-to-override-some-built-in-schematics" tabindex="-1"><a class="header-anchor" href="#how-to-override-some-built-in-schematics" aria-hidden="true">#</a> How to override some built-in schematics?</h3><p>{% version &quot;1.18.2&quot; before=true %}<br> Simply create a schematic file with the same style/name. For instance, to override the {% building_link builder %} wooden level 1, create a schematic file name called wooden/builder1.blueprint.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}<br> Unfortunately, this is not possible, unless you override the entire style (make a style pack with the same name as an existing style pack, in that case).<br> {% endversion %}</p><h3 id="how-to-use-custom-huts" tabindex="-1"><a class="header-anchor" href="#how-to-use-custom-huts" aria-hidden="true">#</a> How to use custom huts?</h3><p>{% version &quot;1.18.2&quot; before=true %}<br> The custom huts need to be copied in the schematics folder.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}<br> The custom huts need to be copied into a style pack.<br> {% endversion %}</p><p>Once copied, you can start your singleplayer or multiplayer game as usual. You should see them in the <a href="../../source/items/buildtool">build tool</a> (if you have the hut block in your inventory).</p><h3 id="how-to-allow-my-players-to-use-their-own-huts-schematics-on-my-server" tabindex="-1"><a class="header-anchor" href="#how-to-allow-my-players-to-use-their-own-huts-schematics-on-my-server" aria-hidden="true">#</a> How to allow my players to use their own huts&#39; schematics on my server?</h3><p>You will have to copy them yourself in the blueprints folder on the server and restart it.</p><h3 id="how-to-allow-my-players-to-use-their-scanned-decoration-schematics-on-my-server" tabindex="-1"><a class="header-anchor" href="#how-to-allow-my-players-to-use-their-scanned-decoration-schematics-on-my-server" aria-hidden="true">#</a> How to allow my players to use their scanned decoration schematics on my server?</h3><p>Edit the Structurize configuration file at <code>minecraft/config/structurize-common.toml</code> and set allowPlayerSchematics to true. This allows the player to use their own decorations. It is not possible for the player to use their own huts&#39; schematics. You can also limit the number of players&#39; schematics at any given time by editing maxCachedSchematics (default is 100). When the limit is reached, the server will start deleting unused schematics.</p><h3 id="how-to-disable-built-in-schematics-completely" tabindex="-1"><a class="header-anchor" href="#how-to-disable-built-in-schematics-completely" aria-hidden="true">#</a> How to disable built-in schematics completely?</h3><p>Edit the Structurize configuration file at <code>minecraft/config/structurize-common.toml</code> and set ignoreSchematicsFromJar to true. Be aware: things will break if some huts&#39; schematics are missing.</p><h3 id="how-to-create-upgradable-decoration-schematics" tabindex="-1"><a class="header-anchor" href="#how-to-create-upgradable-decoration-schematics" aria-hidden="true">#</a> How to create upgradable decoration schematics?</h3><p>{% version &quot;1.18.2&quot; before=true %}<br> Add the <a href="../../source/items/decocontroller">deco controller</a> somewhere in the schematic with the name of the schematic, where you&#39;ll put it in the file directory, and its level. Make sure to actually put the decoration in that file path, but only after scanning - don&#39;t include the path in the scan name.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}<br> Put the <a href="../../source/items/decocontroller">deco controller</a> somewhere in the schematic, and make sure the name of the schematic ends with a number while scanning. The decoration controller will automatically find the decoration in the same folder with the next number.<br> {% endversion %}</p><p><img src="'+w+'" alt="Upgradable Decos"></p><h3 id="how-to-use-custom-mineshafts-in-style-packs" tabindex="-1"><a class="header-anchor" href="#how-to-use-custom-mineshafts-in-style-packs" aria-hidden="true">#</a> How to use custom mineshafts in style packs?</h3><p>The size must be 9 x 4 x 9 blocks. They must be named and oriented exactly the same (i.e. do not rotate at all) as in the default style pack (careful: the names aren&#39;t entirely consistent with the layout, so make careful note which is which!) Use an existing style pack as a template along with the <a href="../../source/items/scantool">scan tool</a> to create the blueprints.</p><p>{% version &quot;1.18.2&quot; before=true %}<br> The custom mineshafts need to be at <code>schematics/yourstyle/miner/*</code>.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}<br> The custom mineshafts need to be at `blueprints/yourstyle/infrastructure/mineshafts/*.</p><p>It&#39;s recommended that you use the <a href="../../source/items/tagtool">tag tool and Tag Anchor</a> to make the mineshafts <code>invisible</code>. Take care that the anchor is in the same position as in the original mineshafts -- the very center bottom block.<br> {% endversion %}</p><h3 id="how-to-make-custom-quarries-in-style-packs" tabindex="-1"><a class="header-anchor" href="#how-to-make-custom-quarries-in-style-packs" aria-hidden="true">#</a> How to make custom quarries in style packs?</h3><p>The {% building_link quarry %} is split into a &quot;top part&quot; and a &quot;bottom part&quot;. Both parts only have one level each.</p><p>The top part is constructed by the Builder and is the part outside of the quarry pit -- decorative walls, fences, cranes, racks, etc. This contains the actual quarry hut block itself, which should pretty much always be on the second y level up from the bottom (i.e. the bottom layer is the ground level, then the hut is on the next layer up), although with some caveats this is not absolutely required.</p><p>The bottom part is constructed by the Quarrier and is the actual quarry pit itself, consisting mostly of placeholders, air blocks, and decorative elements. While you can also set the anchor manually, it&#39;s recommended to use a <a href="../../source/items/tagtool">Tag Anchor</a>. The anchor should normally be at the very top layer, although with some caveats it can be elsewhere.</p><p>{% version &quot;1.18.2&quot; before=true %}<br> The top parts must be named <code>simplequarry1</code> and <code>mediumquarry1</code>, and the corresponding bottom parts are <code>simplequarryshaft1</code> and <code>mediumquarryshaft1</code>.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}<br> The top part can be in any folder and name that you like (and you can have more than one alternate), but the canonical names are <code>infrastructure/mineshafts/simplequarry1</code> and <code>infrastructure/mineshafts/mediumquarry1</code>. (For reasons, it&#39;s currently best to avoid using different names.)</p><p>The bottom part can only be <code>infrastructure/mineshafts/simplequarryshaft1</code> and <code>infrastructure/mineshafts/mediumquarryshaft1</code>, regardless of what or where the top part was. As such, you can only make one of each per style pack.<br> {% endversion %}</p><p>Importantly: when built, the two schematics are aligned such that the anchor of the bottom part is exactly two blocks below the anchor of the top part. You should carefully align them when designing.</p><p>It is permitted for the quarry to be a slightly different size from the default versions, but it&#39;s strongly encouraged (for game balance reasons) to make each one approximately the same size as the originals, and in particular to have the same amount of air blocks in the bottom part, since this affects the final yield of cobble or other stone.</p><h3 id="how-to-create-parent-child-buildings-or-decorations" tabindex="-1"><a class="header-anchor" href="#how-to-create-parent-child-buildings-or-decorations" aria-hidden="true">#</a> How to create parent/child buildings or decorations?</h3><p>The Barracks and Barracks Tower always have a parent/child relationship (i.e. the towers are embedded within the barracks, not directly built separately with the build tool). It&#39;s also possible to do the same with other buildings -- either putting one or more buildings into a containing decoration (e.g. a &quot;district&quot; of related buildings) or even embedding buildings within other buildings.</p><p>Some popular combinations are to embed couriers within the warehouse, and fields within the farmer. Others combinations are possible, depending on your goals for the style -- but don&#39;t go too overboard! Some players like combination buildings since they fit nicely together, but others don&#39;t like them since they can take away flexibility and creativity when building a colony.</p><p>When designing parent/child schematics, the key is the <a href="../../source/items/placeholderblocks">light placeholder</a>. The parent schematic needs to contain the child hut block in the correct position and rotation, along with light placeholders wherever there should be a block from the child, and the parent&#39;s own blocks. Similarly, the child schematic needs its own hut block and other blocks, and light placeholders wherever there should be a block from the parent. It can be helpful to make a temporary scan of either the parent or child and overlay them over the other to help line things up, or to build both together and then duplicate it and split apart the designs.</p><p>While strictly speaking it&#39;s only mandatory to include the child hut at the level that it&#39;s introduced into the parent and you <em>could</em> put only a placeholder at higher levels, it&#39;s strongly recommended to always include the child hut in every higher level of the parent. This works better when someone moves or repairs the parent, or skips levels and pastes it directly at a higher level.</p><p>Also remember that the child building can&#39;t be upgraded to a higher level than the parent building. This limit doesn&#39;t apply if the parent is a non-upgradeable decoration.</p><p>Be careful of &quot;research loops&quot; -- if the player needs to build a child before they can unlock a parent, that&#39;s a problem (unless you also have an alternate standalone of the child).</p><p>Since the parent will contain multiple hut blocks, you will always need to explicitly specify the anchor block (the main parent hut block if a building, or a <a href="../../source/items/decocontroller">deco controller</a> or <a href="../../source/items/tagtool">tag anchor</a> if it&#39;s a decoration) when you <a href="../../source/items/scantool">scan</a>, otherwise you&#39;ll get an error that the anchor was ambiguous and it will not work correctly.</p><p>{% version &quot;1.18.2&quot; before=true %}<br> Since you can only have one version of each building in each folder, combinations should be used very sparingly. The parent and child need to be in the same folder.</p><p>To place the child hut in the parent, you can simply shift-click it, just like when placing it in the child itself. Be sure to get the location and rotation correct -- the child hut will be built with the matching orientation relative to that.<br> {% endversion %}</p><p>{% version &quot;1.19&quot; after=true %}<br> The parent and child need to be in the same folder. This doesn&#39;t mean that you can&#39;t combine buildings that are normally in different folders -- just that the version that&#39;s intended to be the child must be in the same folder as the parent. You may still have another version of the child (to be used by itself, not as a child) in the original folder if you like.</p><p>It&#39;s not supported to have a child contain additional children of its own -- you&#39;re limited to just the two layers (though the parent can contain multiple children of either the same or different types).</p><p>Regardless of which method you use to build, be sure to get the location and rotation of the child hut correct when placing it in the parent -- the building will be built with the matching orientation relative to that.</p><p>If you&#39;ve used the default folder and filenames for your child, then you can simply shift-click the child hut to place it into the parent, similar to older versions. However this is not the most recommended way to do things any more.</p><p>The preferred method is to make another level of your child containing only the hut block, giving it the same folder and name as your actual child, but level 0 (e.g. <code>craftsmanship/storage/mycourier0</code>). You can make it the same size as your real child (surrounded by placeholders) if you wish, but scanning a 1x1x1 is fine too. After scanning, you need to move this to its final location in your actual style pack, and then paste it from there (<em>not</em> from your scans!) into your parent. It doesn&#39;t matter whether you use schematic or constructed paste. Paste the same level 0 into all levels of the parent. After it&#39;s pasted, you can delete the level 0 blueprint -- it should not be included in your final released style pack. (Note that when you go to paste it, the build tool labels it as &quot;level 1&quot; of 6. You can confirm you have the right one by checking the tooltip name.)</p><p>Another option is called &quot;auto-levelling&quot;. This is where instead of making and pasting a level 0 into each level of the parent, you instead paste the actual matching child level (i.e. level 1 child in the level 1 parent, level 2 child in the level 2 parent, etc). Again it doesn&#39;t matter whether you use schematic or constructed paste, but either way you&#39;ll probably have to fix up some of the overlapping blocks afterward. You do still need to include the child hut&#39;s blueprints in your released style pack, and you do still have to paste it from your actual style pack and not your scans folder.</p><p>With auto-levelling, the builder will upgrade the child at the same time as upgrading the parent, instead of the player needing to explicitly build or upgrade one after the other. While this may sound simpler, there are some downsides: the biggest is that won&#39;t work well for child buildings that have required functional blocks (such as beds, furnaces, racks, etc), although purely decorative ones are fine. You also should not use this where the child is locked behind research, unless you can be absolutely certain that it&#39;s already unlocked (e.g. if the parent is unlocked after the child -- though still be careful of loops). The &quot;level 0&quot; method doesn&#39;t have these issues.</p><p>Since you can have multiple alternates of buildings (in the same or separate folders), it&#39;s possible to make a particular building type have both a standalone version as well as a version embedded as a child. It&#39;s strongly recommended to use the <a href="../../source/items/tagtool">tag tool</a> to mark any blueprint intended for use only as a child (in the child schematic itself) as <code>invisible</code> so that it doesn&#39;t show up for building standalone -- especially as child versions are often simpler or cheaper and may be missing walls or other things intended to be provided by the parent, so won&#39;t look good on their own or might break game balance. It&#39;s also possible to have each child of a parent be its own unique blueprint -- but that requires even more scans and more care when pasting to use the right alternate.<br> {% endversion %}</p><h2 id="what-if-i-have-another-question" tabindex="-1"><a class="header-anchor" href="#what-if-i-have-another-question" aria-hidden="true">#</a> What if I have another question?</h2>',136),I={href:"https://discord.minecolonies.com/",target:"_blank",rel:"noopener noreferrer"};function z(B,P){const l=o("router-link"),r=o("ExternalLinkIcon");return d(),h("div",null,[k,x,t("nav",q,[t("ul",null,[t("li",null,[a(l,{to:"#scanning-a-new-structure"},{default:i(()=>[e("Scanning a New Structure")]),_:1})]),t("li",null,[a(l,{to:"#placing-a-schematic"},{default:i(()=>[e("Placing a Schematic.")]),_:1})]),t("li",null,[a(l,{to:"#style-packs"},{default:i(()=>[e("Style packs")]),_:1}),t("ul",null,[t("li",null,[a(l,{to:"#the-pack-json"},{default:i(()=>[e("The pack.json")]),_:1})]),t("li",null,[a(l,{to:"#the-folder-structure"},{default:i(()=>[e("The folder structure")]),_:1})])])]),t("li",null,[a(l,{to:"#faq"},{default:i(()=>[e("FAQ")]),_:1})]),t("li",null,[a(l,{to:"#_1-18-custom-hut-filenames"},{default:i(()=>[e("[1.18] Custom Hut Filenames")]),_:1})]),t("li",null,[a(l,{to:"#custom-supply-ships-and-camps"},{default:i(()=>[e("Custom Supply Ships and Camps")]),_:1})]),t("li",null,[a(l,{to:"#hut-requirements"},{default:i(()=>[e("Hut Requirements")]),_:1})]),t("li",null,[a(l,{to:"#level-requirements-for-overworld-styles"},{default:i(()=>[e("Level Requirements for Overworld Styles")]),_:1})]),t("li",null,[a(l,{to:"#level-requirements-for-nether-styles"},{default:i(()=>[e("Level Requirements for Nether Styles")]),_:1})]),t("li",null,[a(l,{to:"#plantation-fields"},{default:i(()=>[e("Plantation Fields")]),_:1}),t("ul",null,[t("li",null,[a(l,{to:"#vertically-growing-plants-upwards-and-downwards"},{default:i(()=>[e("Vertically Growing Plants (Upwards and Downwards)")]),_:1})]),t("li",null,[a(l,{to:"#treeside-plants"},{default:i(()=>[e("Treeside Plants")]),_:1})]),t("li",null,[a(l,{to:"#bonemealed-fields"},{default:i(()=>[e("Bonemealed Fields")]),_:1})]),t("li",null,[a(l,{to:"#percentage-based-harvesting"},{default:i(()=>[e("Percentage-based Harvesting")]),_:1})])])]),t("li",null,[a(l,{to:"#tips-on-building"},{default:i(()=>[e("Tips on Building")]),_:1}),t("ul",null,[t("li",null,[a(l,{to:"#do"},{default:i(()=>[e("Do")]),_:1})]),t("li",null,[a(l,{to:"#don-t"},{default:i(()=>[e("Don't")]),_:1})])])]),t("li",null,[a(l,{to:"#additional-information"},{default:i(()=>[e("Additional Information")]),_:1}),t("ul",null,[t("li",null,[a(l,{to:"#how-to-override-some-built-in-schematics"},{default:i(()=>[e("How to override some built-in schematics?")]),_:1})]),t("li",null,[a(l,{to:"#how-to-use-custom-huts"},{default:i(()=>[e("How to use custom huts?")]),_:1})]),t("li",null,[a(l,{to:"#how-to-allow-my-players-to-use-their-own-huts-schematics-on-my-server"},{default:i(()=>[e("How to allow my players to use their own huts' schematics on my server?")]),_:1})]),t("li",null,[a(l,{to:"#how-to-allow-my-players-to-use-their-scanned-decoration-schematics-on-my-server"},{default:i(()=>[e("How to allow my players to use their scanned decoration schematics on my server?")]),_:1})]),t("li",null,[a(l,{to:"#how-to-disable-built-in-schematics-completely"},{default:i(()=>[e("How to disable built-in schematics completely?")]),_:1})]),t("li",null,[a(l,{to:"#how-to-create-upgradable-decoration-schematics"},{default:i(()=>[e("How to create upgradable decoration schematics?")]),_:1})]),t("li",null,[a(l,{to:"#how-to-use-custom-mineshafts-in-style-packs"},{default:i(()=>[e("How to use custom mineshafts in style packs?")]),_:1})]),t("li",null,[a(l,{to:"#how-to-make-custom-quarries-in-style-packs"},{default:i(()=>[e("How to make custom quarries in style packs?")]),_:1})]),t("li",null,[a(l,{to:"#how-to-create-parent-child-buildings-or-decorations"},{default:i(()=>[e("How to create parent/child buildings or decorations?")]),_:1})])])]),t("li",null,[a(l,{to:"#what-if-i-have-another-question"},{default:i(()=>[e("What if I have another question?")]),_:1})])])]),_,t("p",null,[e("You can download a template folder structure from "),t("a",T,[e("github"),a(r)]),e(" (template.zip), which contains the icons used for the official styles already."),S,e(" That github page also contains examples how different styles are structured."),H,e(" An overview with which buildings go into which folders can also be found "),t("a",N,[e("here"),a(r)]),e(".")]),C,t("p",null,[e("There's a channel in the "),t("a",I,[e("Discord server"),a(r)]),e(" specifically for asking questions about designing your own schematics.")])])}const A=n(v,[["render",z],["__file","schematics.html.vue"]]);export{A as default};
